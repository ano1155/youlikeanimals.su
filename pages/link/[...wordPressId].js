import Head from 'next/head'
import Image from 'next/image'
import styles from '../../styles/Home.module.css'
import { parse } from 'node-html-parser';
import render from "html-react-parser";
import axios from 'axios'
import { DOMAIN, HOST } from '../../config.js'
import { useState } from 'react';


export default function WP({ isClient = true, url, link, metas = [], title, content, ogImageNewUrl, ...rest }) {
  console.log(rest);
  const redirectUrl = HOST + (link || '');
  const elements = metas.map((meta, i) => <meta key={i} property={meta.property} content={meta.content} />);

  if (typeof window !== "undefined" && url !== '/'
    && !isClient
  ) {
    window.location.href = redirectUrl;
  }
  if (url === '/') {
    return (
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <h1 className={styles.title}>
            Welcome to <a href="https://nextjs.org">Next.js!</a>
          </h1>

          <p className={styles.description}>
            Get started by editing{' '}
            <code className={styles.code}>pages/index.js</code>
          </p>

          <div className={styles.grid}>
            <a href="https://nextjs.org/docs" className={styles.card}>
              <h2>Documentation &rarr;</h2>
              <p>Find in-depth information about Next.js features and API.</p>
            </a>

            <a href="https://nextjs.org/learn" className={styles.card}>
              <h2>Learn &rarr;</h2>
              <p>Learn about Next.js in an interactive course with quizzes!</p>
            </a>

            <a
              href="https://github.com/vercel/next.js/tree/canary/examples"
              className={styles.card}
            >
              <h2>Examples &rarr;</h2>
              <p>Discover and deploy boilerplate example Next.js projects.</p>
            </a>

            <a
              href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              className={styles.card}
            >
              <h2>Deploy &rarr;</h2>
              <p>
                Instantly deploy your Next.js site to a public URL with Vercel.
              </p>
            </a>
          </div>
        </main>

        <footer className={styles.footer}>
          <a
            href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            target="_blank"
            rel="noopener noreferrer"
          >
            Powered by{' '}
            <span className={styles.logo}>
              <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
            </span>
          </a>
        </footer>
      </div>
    )
  }


  const clientSideComponents = (
    <div className="Home_container__bCOhY">
      <div
        style={{ padding: "20px", margin: "30px auto", "maxWidth": "800px", background: "white", "boxShadow": "rgb(136, 136, 136) 5px 5px 5px" }}>
        <div>
          <div></div>
          <header>
            <div>
              <li><a href="#home">Home</a></li>
              <li><a href="#news">News</a></li>
              <li><a href="#contact">Contact</a></li>
            </div>
            <li style={{ float: "right" }}><a className="active" href="#about">About</a></li>
          </header>
        </div>
        <h2 id="title">{render(title)}</h2>
        <img src={ogImageNewUrl} />
        <div id="content">{render(content)}</div>
      </div>
    </div>) 
  return (
    <div className={styles.container}>
      <Head>
        {elements}
      </Head>
      <main>
        {clientSideComponents}
      </main>
    </div>
  )
}

WP.getInitialProps = async (props) => {
  const searchParams = new URLSearchParams(props.req.url);
  
  let isClient = true;
  if (props.req.headers.referer?.match(/^https?:\/\/([^\/]+\.)?facebook\.com(\/|$)/i)) {
    isClient = false;
  }
  const setHeader = props.res.setHeader;
  props.res.setHeader = (header, value, controlString) => {
    if (controlString === 'controlString') {
      setHeader(header, value);
    }
  }
  // props.res.setHeader('Cache-Control', 's-maxage=600, stale-while-revalidate=600', 'controlString');

  if (props.req.url === '/') return { url: '/' }
//   const { link, id } = props.query;
  const link = props.query.wordPressId.join('/');
  const fullUrl = HOST + (encodeURI(link) || '');
  const html = (await axios.get(fullUrl)).data;
  const dom = parse(html);
  const metas = dom.querySelectorAll('meta[property]').map(e => e._attrs).filter(e => [
    'og:type',
    'og:title',
    'og:description',
    'og:image',
    'og:image:alt'
  ].includes(e.property));

  const ogImageUrl = metas.find(e => e.property === 'og:image');
  const ogImagePathname = new URL(ogImageUrl.content).pathname;

  const ogImageNewUrl = DOMAIN + 'api' + ogImagePathname;
  for (let i = 0; i < metas.length; ++i) {
    if (metas[i].property === 'og:image') {
      metas[i].content = ogImageNewUrl;
    } else if (metas[i].property === 'og:description') {
      metas[i].content = ' ...';
    }
  }
  metas.push({
    property: 'og:image:alt',
    content: metas.find(e => e.property === 'og:title').content
  })
  const postId = dom.querySelector('article').getAttribute('id').split('-')[1];

  const apiUrl = HOST + 'wp-json/wp/v2/posts/' + postId;
  const wpJson = (await axios.get(apiUrl)).data;
  const title = wpJson.title.rendered;
  const content = wpJson.content.rendered;
  return { link, metas, title, content, ogImageNewUrl, isClient }
}
